/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package botbot

import dev.kord.core.Kord
import dev.kord.core.event.message.MessageCreateEvent
import dev.kord.core.on
import dev.kord.gateway.Intent
import dev.kord.gateway.PrivilegedIntent
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.withContext
import java.io.File
import java.io.FileInputStream
import java.util.Properties

suspend fun main() {
    if (!File("local.properties").exists()) return
    val props = Properties()
    withContext(Dispatchers.IO) {
        props.load(FileInputStream(File("local.properties")))
    }
    val discordToken = props.getProperty("dtoken")
    val openaiToken = props.getProperty("openai")
    val service = AiService(openaiToken)
    val botConfig = BotConfig.load()

    val kord = Kord(discordToken)
    val bot = BotBot(service, botConfig, kord.selfId)

    kord.on<MessageCreateEvent> {
        println("message: ${message.content}")

        val reply = bot.process(message)
        if (reply != null) {
            message.channel.createMessage(reply)
        }
    }

    kord.login {
        // we need to specify this to receive the content of messages
        @OptIn(PrivilegedIntent::class)
        intents += Intent.MessageContent
    }
}
